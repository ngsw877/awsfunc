---
description: Go コードスタイル & 横断ルール
globs: "**/*.go"
alwaysApply: true
---

# 命名規則

- **パッケージ名** はすべて小文字・単数形（例: `service`, `aws`, `config`）
- **変数・関数・定数**
  - 非公開なら *camelCase*（先頭小文字）
  - 公開（エクスポート）する場合は *UpperCamelCase*（先頭大文字）
- **構造体・インターフェース** は UpperCamelCase（型名として読みやすくする）
- **略語の大文字化**
  - `AWS` → `Aws`, `HTTP` → `Http`, `ID` → `Id` など
  - 例: `AwsClient`, `HttpRequest`, `UserId`

# 可視性ポリシー (公開範囲)

- まず **private（小文字始まり）** で定義すること
- 他パッケージから参照される必要が生じた場合のみ public（大文字始まり）に昇格
- パブリック関数・構造体には必ず GoDoc コメントを付ける

# エラーハンドリング

- 下位層では `fmt.Errorf("%w", err)` でエラーをラップして伝播
  - 上位で `errors.Is/As` による判定が可能
- 上位層（CLIなど）でユーザ向けメッセージへ整形
- Sentinel error を使う場合は `errors.New` で定義し、比較は `errors.Is`

# コメント・ドキュメント (GoDoc)

- パブリック API には GoDoc 形式のコメントを付与
  - 1 行目に概要、2 行目以降に詳細
- コメントは「なぜ」を中心に書き、コードで「何をするか」を示す